name: 'Update Pipenv Package'

on:
  workflow_call:
    inputs:
      python_version:
        default: '3.11'
        required: false
        type: string
      runs-on:
        type: string
        required: false
        default: self-hosted
    secrets:
      pipy_registry_auth:
        required: false
      checkout_token:
        required: true

env:
  PIPENV_VENV_IN_PROJECT: 1

jobs:
  # This workflow contains a single job called "build"
  package-update:
    # The type of runner that the job will run on
    runs-on: ["${{ inputs.runs-on }}", macOS]
    timeout-minutes: 20
    env:
      env_base64: ${{ secrets.env_base64 }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
        with:
          token: ${{ secrets.checkout_token }}
      - name: print github context
        run: |
          echo '${{ toJSON(github) }}'
      - name: Setup ENV
        if: ${{ env.env_base64 != '' }}
        run: echo ${{ env.env_base64 }} | base64 -d > .env
      - uses: actions/setup-python@main
        with:
          cache: "pipenv"
          python-version: ${{ inputs.python_version }}
          check-latest: true
        if: inputs.runs-on != 'self-hosted'
      - name: install pipenv
        run: |
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        if: inputs.runs-on != 'self-hosted'
      - name: Pull pre-commit config
        run: |
          curl -O https://raw.githubusercontent.com/tryagainconcepts/reusable-github-workflows/main/.pre-commit-config.yaml
          curl -O https://raw.githubusercontent.com/tryagainconcepts/reusable-github-workflows/main/pyproject.toml
          rm -f .pylintrc
      - uses: wangsha/pre-commit-github-action@main
        with:
          extra_args: --all-files
      - name: install package
        run: |
          pipenv --clear
          rm -f Pipfile.lock
          pipenv update --dev
          pipenv run pip list
        env:
          REGISTRY_AUTH: ${{ secrets.pipy_registry_auth }}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@main
        with:
          base: main
          token: ${{ secrets.checkout_token }}
          title: '[Automated] Update Pipenv Package'
          labels: |
            automated
            automerge