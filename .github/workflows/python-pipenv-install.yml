name: Python CI Workflow

on:
  workflow_call:
    inputs:
      python_version:
        default: '3.13'
        required: false
        type: string
      test_script:
        required: false
        type: string
      deploy_script:
        required: false
        type: string
      setup_mongo:
        default: false
        required: false
        type: boolean
      setup_redis:
        default: false
        required: false
        type: boolean
      pypi_release:
        default: false
        required: false
        type: boolean
      aws_region:
        required: false
        default: "ap-southeast-1"
        type: string
      pipenv_setup_check:
        required: false
        default: true
        type: boolean
      runs-on:
        type: string
        required: false
        default: self-hosted
    secrets:
      pipy_registry_auth:
        required: false
      slack_webhook_url:
        description: "notify slack on github action result"
        required: false
      aws_key_id:
        required: false
      aws_secret:
        required: false
      env_base64:
        required: false

jobs:
  build-test-deploy:
    name: Build Test and Deploy
    runs-on: "${{ inputs.runs-on }}"
    timeout-minutes: 20
    env:
      env_base64: ${{ secrets.env_base64 }}
    steps:
      - uses: supercharge/redis-github-action@1.4.0
        if: inputs.setup_redis && inputs.runs-on != 'self-hosted'
      - id: checkout
        uses: actions/checkout@main
      - name: print github context
        run: |
          echo '${{ toJSON(steps.checkout.outputs) }}'
          echo $JSON
        env:
          JSON: ${{ toJSON(github) }}
      - uses: actions/setup-python@main
        id: setup-python
        with:
          python-version: ${{ inputs.python_version }}
          check-latest: true
        if: runner.environment != 'self-hosted'
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        if: runner.environment != 'self-hosted'
      - name: Pull pre-commit config
        run: |
          curl -O https://raw.githubusercontent.com/tryagainconcepts/reusable-github-workflows/main/.pre-commit-config.yaml
        if: github.ref != 'refs/heads/main'
      - name: format code
        run: make format
        if: github.ref != 'refs/heads/main'
      - uses: stefanzweifel/git-auto-commit-action@master
        with:
          commit_message: Automated Changes from pre-commit hooks
          file_pattern: ':!.github/'
        if: github.ref != 'refs/heads/main'
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo Hello, world!
          echo github ref: ${{ github.ref }}
      - name: install package
        run: |
          IFS=":" read -r USERNAME PASSWORD <<< "$REGISTRY_AUTH"
          export UV_INDEX_PRIVATE_REGISTRY_USERNAME="$USERNAME"
          export UV_INDEX_PRIVATE_REGISTRY_PASSWORD="$PASSWORD"
          echo "Registry username: $UV_INDEX_PRIVATE_REGISTRY_USERNAME"
          uv venv
          source .venv/bin/activate
          make config-test
        env:
          REGISTRY_AUTH: ${{ secrets.pipy_registry_auth }}
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        if: inputs.setup_mongo && inputs.runs-on != 'self-hosted'
      - name: Setup ENV
        if: ${{ env.env_base64 != '' }}
        run: |
          echo ${{ env.env_base64 }} | base64 -d > .env
      - name: run test
        if: inputs.test_script
        run: ${{ inputs.test_script }}
      - name: automerge on PR labelled with automerge
        id: automerge
        if: github.ref != 'refs/heads/main'
        uses: "pascalgn/automerge-action@main"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: "automerge,!work in progress"
      - name: switch to main branch
        if: steps.automerge.outputs.mergeResult == 'merged'
        uses: actions/checkout@main
        with:
          ref: main
      - name: deploy
        if: inputs.deploy_script && (endsWith(github.ref, '/main') || steps.automerge.outputs.mergeResult == 'merged')
        run: ${{ inputs.deploy_script }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret }}
          AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
          REGISTRY_AUTH: ${{ secrets.pipy_registry_auth }}
      - name: bumpversion
        if: endsWith(github.ref, '/main') || steps.automerge.outputs.mergeResult == 'merged'
        run: |
          git config --global user.email "bumpversion@example.com"
          git config --global user.name "versionbump"
          uv tool install bump-my-version
          uvx bump-my-version bump minor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push new version tag
        if: endsWith(github.ref, '/main') || steps.automerge.outputs.mergeResult == 'merged'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
      - name: Release pypi on main branch
        if: inputs.pypi_release && (endsWith(github.ref, '/main') || steps.automerge.outputs.mergeResult == 'merged')
        run: |
          make release-s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret }}
          AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
      - name: notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }} # required
        if: always()
  changelog:
      name: Changelog
      runs-on: ubuntu-latest
      timeout-minutes: 10
      if: endsWith(github.ref, '/main')
      needs: build-test-deploy
      steps:
        - uses: actions/checkout@main
        - name: Add Changelog
          uses: charity-detalytics/changelog-ci@main
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}